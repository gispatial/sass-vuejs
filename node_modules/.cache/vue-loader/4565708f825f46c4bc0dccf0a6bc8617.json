{"remainingRequest":"/Users/crocslut/Desktop/xdt-033/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/xdt-033/src/components/Maps/MapExample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/xdt-033/src/components/Maps/MapExample.vue","mtime":1615175928042},{"path":"/Users/crocslut/Desktop/xdt-033/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crocslut/Desktop/xdt-033/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/crocslut/Desktop/xdt-033/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crocslut/Desktop/xdt-033/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkKCkgewogICAgbGV0IGdvb2dsZSA9IHdpbmRvdy5nb29nbGU7CiAgICBsZXQgbWFwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcC1jYW52YXMiKTsKICAgIGxldCBsYXQgPSBtYXAuZ2V0QXR0cmlidXRlKCJkYXRhLWxhdCIpOwogICAgbGV0IGxuZyA9IG1hcC5nZXRBdHRyaWJ1dGUoImRhdGEtbG5nIik7CgogICAgY29uc3QgbXlMYXRsbmcgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGxhdCwgbG5nKTsKICAgIGNvbnN0IG1hcE9wdGlvbnMgPSB7CiAgICAgIHpvb206IDEyLAogICAgICBzY3JvbGx3aGVlbDogZmFsc2UsCiAgICAgIGNlbnRlcjogbXlMYXRsbmcsCiAgICAgIG1hcFR5cGVJZDogZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlJPQURNQVAsCiAgICAgIHN0eWxlczogWwogICAgICAgIHsKICAgICAgICAgIGZlYXR1cmVUeXBlOiAiYWRtaW5pc3RyYXRpdmUiLAogICAgICAgICAgZWxlbWVudFR5cGU6ICJsYWJlbHMudGV4dC5maWxsIiwKICAgICAgICAgIHN0eWxlcnM6IFt7IGNvbG9yOiAiIzQ0NDQ0NCIgfV0sCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBmZWF0dXJlVHlwZTogImxhbmRzY2FwZSIsCiAgICAgICAgICBlbGVtZW50VHlwZTogImFsbCIsCiAgICAgICAgICBzdHlsZXJzOiBbeyBjb2xvcjogIiNmMmYyZjIiIH1dLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgZmVhdHVyZVR5cGU6ICJwb2kiLAogICAgICAgICAgZWxlbWVudFR5cGU6ICJhbGwiLAogICAgICAgICAgc3R5bGVyczogW3sgdmlzaWJpbGl0eTogIm9mZiIgfV0sCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBmZWF0dXJlVHlwZTogInJvYWQiLAogICAgICAgICAgZWxlbWVudFR5cGU6ICJhbGwiLAogICAgICAgICAgc3R5bGVyczogW3sgc2F0dXJhdGlvbjogLTEwMCB9LCB7IGxpZ2h0bmVzczogNDUgfV0sCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBmZWF0dXJlVHlwZTogInJvYWQuaGlnaHdheSIsCiAgICAgICAgICBlbGVtZW50VHlwZTogImFsbCIsCiAgICAgICAgICBzdHlsZXJzOiBbeyB2aXNpYmlsaXR5OiAic2ltcGxpZmllZCIgfV0sCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBmZWF0dXJlVHlwZTogInJvYWQuYXJ0ZXJpYWwiLAogICAgICAgICAgZWxlbWVudFR5cGU6ICJsYWJlbHMuaWNvbiIsCiAgICAgICAgICBzdHlsZXJzOiBbeyB2aXNpYmlsaXR5OiAib2ZmIiB9XSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGZlYXR1cmVUeXBlOiAidHJhbnNpdCIsCiAgICAgICAgICBlbGVtZW50VHlwZTogImFsbCIsCiAgICAgICAgICBzdHlsZXJzOiBbeyB2aXNpYmlsaXR5OiAib2ZmIiB9XSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGZlYXR1cmVUeXBlOiAid2F0ZXIiLAogICAgICAgICAgZWxlbWVudFR5cGU6ICJhbGwiLAogICAgICAgICAgc3R5bGVyczogW3sgY29sb3I6ICIjNWU3MmU0IiB9LCB7IHZpc2liaWxpdHk6ICJvbiIgfV0sCiAgICAgICAgfSwKICAgICAgXSwKICAgIH07CgogICAgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXAsIG1hcE9wdGlvbnMpOwoKICAgIGNvbnN0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoewogICAgICBwb3NpdGlvbjogbXlMYXRsbmcsCiAgICAgIG1hcDogbWFwLAogICAgICBhbmltYXRpb246IGdvb2dsZS5tYXBzLkFuaW1hdGlvbi5EUk9QLAogICAgICB0aXRsZTogIkhlbGxvIFdvcmxkISIsCiAgICB9KTsKCiAgICBjb25zdCBjb250ZW50U3RyaW5nID0KICAgICAgJzxkaXYgY2xhc3M9ImluZm8td2luZG93LWNvbnRlbnQiPjxoMj5YRU5ESVQ8L2gyPicgKwogICAgICAiPHA+QSBiZWF1dGlmdWwgVUkgS2l0IGFuZCBBZG1pbiBmb3IgVGFpbHdpbmQgQ1NTLiBJdCBpcyBGcmVlIGFuZCBPcGVuIFNvdXJjZS48L3A+PC9kaXY+IjsKCiAgICBjb25zdCBpbmZvd2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coewogICAgICBjb250ZW50OiBjb250ZW50U3RyaW5nLAogICAgfSk7CgogICAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIobWFya2VyLCAiY2xpY2siLCBmdW5jdGlvbiAoKSB7CiAgICAgIGluZm93aW5kb3cub3BlbihtYXAsIG1hcmtlcik7CiAgICB9KTsKICB9LAp9Owo="},{"version":3,"sources":["MapExample.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MapExample.vue","sourceRoot":"src/components/Maps","sourcesContent":["<template>\n  <div\n    id=\"map-canvas\"\n    class=\"relative w-full rounded h-600-px\"\n    data-lat=\"40.748817\"\n    data-lng=\"-73.985428\"\n  ></div>\n</template>\n<script>\nexport default {\n  mounted() {\n    let google = window.google;\n    let map = document.getElementById(\"map-canvas\");\n    let lat = map.getAttribute(\"data-lat\");\n    let lng = map.getAttribute(\"data-lng\");\n\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      scrollwheel: false,\n      center: myLatlng,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: [\n        {\n          featureType: \"administrative\",\n          elementType: \"labels.text.fill\",\n          stylers: [{ color: \"#444444\" }],\n        },\n        {\n          featureType: \"landscape\",\n          elementType: \"all\",\n          stylers: [{ color: \"#f2f2f2\" }],\n        },\n        {\n          featureType: \"poi\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"all\",\n          stylers: [{ saturation: -100 }, { lightness: 45 }],\n        },\n        {\n          featureType: \"road.highway\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"simplified\" }],\n        },\n        {\n          featureType: \"road.arterial\",\n          elementType: \"labels.icon\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"transit\",\n          elementType: \"all\",\n          stylers: [{ visibility: \"off\" }],\n        },\n        {\n          featureType: \"water\",\n          elementType: \"all\",\n          stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\n        },\n      ],\n    };\n\n    map = new google.maps.Map(map, mapOptions);\n\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Hello World!\",\n    });\n\n    const contentString =\n      '<div class=\"info-window-content\"><h2>XENDIT</h2>' +\n      \"<p>A beautiful UI Kit and Admin for Tailwind CSS. It is Free and Open Source.</p></div>\";\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  },\n};\n</script>\n"]}]}